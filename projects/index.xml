<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projects on Davis Builds Robots</title>
    <link>https://davisbuildsrobots.dev/projects/</link>
    <description>Recent content in Projects on Davis Builds Robots</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://davisbuildsrobots.dev/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Balancing Bot</title>
      <link>https://davisbuildsrobots.dev/projects/balancing-bot/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/balancing-bot/</guid>
      <description>&lt;p&gt;This is my self-balancing robot project, which uses a PID controller and an IMU to stay upright. Below are images and a video walkthrough of the system.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
&lt;div style=&#34;flex: 1; min-width: 250px; text-align: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/bot1.PNG&#34; alt=&#34;Front view&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;p&gt;&lt;em&gt;Front view of the robot&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1; min-width: 250px; text-align: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/bot2.jpg&#34; alt=&#34;Back view&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;p&gt;&lt;em&gt;Back view with wiring and power pack&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1; min-width: 250px; text-align: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/bot3.jpg&#34; alt=&#34;IMU close-up&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;p&gt;&lt;em&gt;Close-up of the IMU used for stabilization&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chip-Based Computer</title>
      <link>https://davisbuildsrobots.dev/projects/chip-based-computer/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/chip-based-computer/</guid>
      <description>&lt;p&gt;A homemade computer built from scratch using basic logic gates, flip-flops, and memory chips. Runs basic programs and arithmetic.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chipcomp1.jpg&#34; alt=&#34;Breadboard CPU&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chipcomp2.jpg&#34; alt=&#34;Instruction Decoder&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chipcomp3.jpg&#34; alt=&#34;Running Program&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-demo-video&#34;&gt;ðŸŽ¥ Demo Video&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/REPLACE_ME&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;max-width: 100%; border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-features&#34;&gt;ðŸ”§ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;8-bit architecture with ALU&lt;/li&gt;
&lt;li&gt;Custom opcode set&lt;/li&gt;
&lt;li&gt;Clocked instruction cycles&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-source-code&#34;&gt;ðŸ”— Source Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yourusername/chip-computer&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DIY EEG</title>
      <link>https://davisbuildsrobots.dev/projects/diy-eeg/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/diy-eeg/</guid>
      <description>&lt;p&gt;This is my DIY EEG project, built using the AD627B instrumentation amplifier and TL084CN op-amp to capture brainwave signals. The circuit is designed to amplify weak scalp-level voltages and filter out common noise, including 60 Hz powerline interference.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
&lt;div style=&#34;flex: 1; min-width: 250px; text-align: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/forehead.jpg&#34; alt=&#34;EEG electrode setup&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;p&gt;&lt;em&gt;Two electrodes placed on the Fp1 and Fp2 to track general attention/focus.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1; min-width: 250px; text-align: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/hospital.jpg&#34; alt=&#34;Hospital&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;p&gt;&lt;em&gt;Fun fact theres are actually electro cardiagram pads from when I went to the hospital for Rhabdo!&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embedded Chess AI</title>
      <link>https://davisbuildsrobots.dev/projects/embedded-chess-ai/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/embedded-chess-ai/</guid>
      <description>&lt;p&gt;A physical chessboard with an embedded AI opponent built using microcontrollers and real-time strategy computation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chess1.jpg&#34; alt=&#34;Board with LEDs&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chess2.jpg&#34; alt=&#34;Microcontroller Wiring&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/chess3.jpg&#34; alt=&#34;Game In Progress&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-demo-video&#34;&gt;ðŸŽ¥ Demo Video&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/REPLACE_ME&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;max-width: 100%; border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-features&#34;&gt;ðŸ”§ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Minimax-based AI with alpha-beta pruning&lt;/li&gt;
&lt;li&gt;Touch or magnet sensing for pieces&lt;/li&gt;
&lt;li&gt;Embedded move logic and LED feedback&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-source-code&#34;&gt;ðŸ”— Source Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yourusername/chess-ai&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>High Acceleration Test Rig</title>
      <link>https://davisbuildsrobots.dev/projects/high-acceleration-test-rig/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/high-acceleration-test-rig/</guid>
      <description>&lt;p&gt;This project focuses on developing a high-g-force mechanical test rig for stress testing components.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/test-rig1.jpg&#34; alt=&#34;Rig Side View&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/test-rig2.jpg&#34; alt=&#34;Sensor Mount&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/test-rig3.jpg&#34; alt=&#34;High-Speed Camera Setup&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-demo-video&#34;&gt;ðŸŽ¥ Demo Video&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/REPLACE_ME&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;max-width: 100%; border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-features&#34;&gt;ðŸ”§ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Custom CAD frame built for shock resistance&lt;/li&gt;
&lt;li&gt;Embedded data logging&lt;/li&gt;
&lt;li&gt;Real-time performance monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-source-code&#34;&gt;ðŸ”— Source Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yourusername/test-rig&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ising Machine</title>
      <link>https://davisbuildsrobots.dev/projects/ising-machine/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/ising-machine/</guid>
      <description>&lt;style&gt;
body {
  text-align: left;
}
#matrixSection {
  text-align: center;
  margin-top: 2em;
}
#matrixWrapper {
  display: inline-block;
  margin-top: 30px;
  color: #000;

}
.oscillator {
  width: 50px;
  height: 30px;
  background-color: purple;
  border-radius: 50%;
  margin: 5px auto 2px;
}
table {
  border-collapse: collapse;
  margin: auto;
}
td, th {
  width: 80px;
  height: 80px;
  text-align: center;
  vertical-align: middle;
  border: 2px solid #aaa;
  font-size: 14px;
  cursor: pointer;
  position: relative;
}
.active {
  background-color: #cce5ff;
}
.disabled-cell {
  background-color: #eee;
  pointer-events: none;
}
:root {
  --btn-bg: #337ab7; /* medium blue for light mode */
  --btn-bg-hover: #286090;
}

@media (prefers-color-scheme: dark) {
  :root {
    --btn-bg: #225288;       /* darker blue for dark mode */
    --btn-bg-hover: #183b61;
  }
}

.btn {
  background: var(--btn-bg);
  color: white;
  padding: 0.75rem 1.5rem;
  margin: 2rem 0;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
  transition: background 0.2s ease;
}

.btn:hover {
  background: var(--btn-bg-hover);
}

#sliderContainer {
  margin: 30px auto;
  background: white;
  padding: 15px;
  width: fit-content;
  border-radius: 10px;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
  color: #000;
}
#isingEquation, #outputStates {
  font-family: monospace;
  font-size: 16px;
  margin-top: 30px;
  text-align: center;
}
#calcOutputBtn {
  padding: 10px 20px;
  margin-top: 20px;
  font-size: 16px;
}
&lt;/style&gt;
&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer!&lt;/h2&gt;
&lt;p&gt;This was truly a MASSIVE undertaking and quite possibly the most technically challenging project that I have ever been a part of.
As such, I spent an extensive amount of time discussing component selection with experienced PCB design professionals and the theory behind the project with an expert
in quantum mechanics simulation&amp;hellip; all to do my (relatively) smaller software integration and hardware simulation in the pictured below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Microcontroller Micro Projects</title>
      <link>https://davisbuildsrobots.dev/projects/microcontroller-micro-projects/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/microcontroller-micro-projects/</guid>
      <description>&lt;p&gt;Quick MicroPython experiments with code, embedded simulators, and source links.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-wokwi-debounce-demo&#34;&gt;ðŸ§² 1. Wokwi Debounce Demo&lt;/h2&gt;
&lt;p&gt;This project uses MicroPython to debounce a pushbutton and toggle an LED â€” ideal for learning interrupts and hardware signal smoothing.&lt;/p&gt;
&lt;p&gt;ðŸŽ® &lt;strong&gt;Live Demo (click + edit):&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
  &lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://wokwi.com/projects/372153001566564353/embed&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;ðŸ§  &lt;strong&gt;MicroPython Code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; machine &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Pin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sleep
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;led &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, Pin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OUT)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;btn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pin(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, Pin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;IN, Pin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PULL_UP)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; btn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        led&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value(&lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; led&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# debounce delay&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Programmable Waterfall</title>
      <link>https://davisbuildsrobots.dev/projects/programmable-waterfall/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/programmable-waterfall/</guid>
      <description>&lt;p&gt;An interactive waterfall system using valve timing to display shapes, letters, and waves in mid-air using falling water.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/waterfall1.jpg&#34; alt=&#34;Front view&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/waterfall2.jpg&#34; alt=&#34;Valve Array&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/waterfall3.jpg&#34; alt=&#34;Pattern Preview&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-demo-video&#34;&gt;ðŸŽ¥ Demo Video&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/REPLACE_ME&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;max-width: 100%; border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-features&#34;&gt;ðŸ”§ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Electronically timed valve control&lt;/li&gt;
&lt;li&gt;Pattern sequencing from SD card or UI&lt;/li&gt;
&lt;li&gt;Mesmerizing real-world graphics from gravity&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-source-code&#34;&gt;ðŸ”— Source Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yourusername/waterfall-display&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Winning Robot</title>
      <link>https://davisbuildsrobots.dev/projects/winning-robot/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://davisbuildsrobots.dev/projects/winning-robot/</guid>
      <description>&lt;p&gt;A wearable EEG system to detect and visualize brainwave activity using open-source hardware and signal processing tools.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-photos&#34;&gt;ðŸ“¸ Photos&lt;/h2&gt;
&lt;div style=&#34;display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/eeg1.jpg&#34; alt=&#34;Headband Sensor&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/eeg2.jpg&#34; alt=&#34;Live Graph&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
  &lt;img src=&#34;https://davisbuildsrobots.dev/images/eeg3.jpg&#34; alt=&#34;Electrode Setup&#34; style=&#34;max-width: 100%; border-radius: 8px;&#34;&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-demo-video&#34;&gt;ðŸŽ¥ Demo Video&lt;/h2&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/REPLACE_ME&#34; frameborder=&#34;0&#34; allowfullscreen style=&#34;max-width: 100%; border-radius: 10px;&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-features&#34;&gt;ðŸ”§ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Multi-channel EEG input&lt;/li&gt;
&lt;li&gt;Noise filtering and artifact rejection&lt;/li&gt;
&lt;li&gt;Real-time FFT visualization&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-source-code&#34;&gt;ðŸ”— Source Code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yourusername/eeg-reader&#34;&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
